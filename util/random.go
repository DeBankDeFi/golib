package util

import (
	"math/rand"
	"time"
)

const alphabet = "abcdefghijklmnopqrstuvwxyz"

func init() {
	rand.Seed(time.Now().UnixNano())
}

// RangeInt a random range of numbers as a slice within a range.
func RangeInt(min int, max int, n int) []int {
	arr := make([]int, n)
	var r int
	for r = 0; r <= n-1; r++ {
		arr[r] = rand.Intn(max) + min
	}
	return arr
}

// IntnRange a random number will be return within a range.
func IntnRange(min int, max int) int {
	return RangeInt(min, max, 1)[0]
}

// RandomName a random name generated by alphabet.
func RandomName(length int) string {
	b := make([]byte, length)
	for i := range b {
		b[i] = alphabet[rand.Intn(len(alphabet))]
	}
	return string(b)
}

// RandomSha1Digest generate a random sha1 digest.
func RandomSha1Digest() string {
	rs := RandomName(IntnRange(1, 100))
	return Sha1(rs)
}
